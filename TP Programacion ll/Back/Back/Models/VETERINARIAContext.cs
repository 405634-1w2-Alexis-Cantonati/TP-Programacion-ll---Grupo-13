// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Back.Models
{
    public partial class VETERINARIAContext : DbContext
    {
        public VETERINARIAContext()
        {
        }

        public VETERINARIAContext(DbContextOptions<VETERINARIAContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Atencion> Atencions { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Mascota> Mascotas { get; set; }
        public virtual DbSet<Tipo> Tipos { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Atencion>(entity =>
            {
                entity.HasKey(e => e.IdAtencion)
                    .HasName("pk_atencion");

                entity.ToTable("Atencion");

                entity.Property(e => e.IdAtencion).HasColumnName("id_atencion");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha");

                entity.Property(e => e.IdMascota).HasColumnName("id_mascota");

                entity.Property(e => e.Importe).HasColumnName("importe");

                entity.HasOne(d => d.IdMascotaNavigation)
                    .WithMany(p => p.Atencions)
                    .HasForeignKey(d => d.IdMascota)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_mascota");
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.HasKey(e => e.IdCliente)
                    .HasName("pk_cliente");

                entity.Property(e => e.IdCliente).HasColumnName("id_cliente");

                entity.Property(e => e.Codigo).HasColumnName("codigo");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("sexo");
            });

            modelBuilder.Entity<Mascota>(entity =>
            {
                entity.HasKey(e => e.IdMascota)
                    .HasName("pk_mascota");

                entity.Property(e => e.IdMascota).HasColumnName("id_mascota");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.IdCliente).HasColumnName("id_cliente");

                entity.Property(e => e.IdTipo).HasColumnName("id_tipo");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.HasOne(d => d.IdClienteNavigation)
                    .WithMany(p => p.Mascota)
                    .HasForeignKey(d => d.IdCliente)
                    .HasConstraintName("fk_cliente");

                entity.HasOne(d => d.IdTipoNavigation)
                    .WithMany(p => p.Mascota)
                    .HasForeignKey(d => d.IdTipo)
                    .HasConstraintName("fk_tipo");
            });

            modelBuilder.Entity<Tipo>(entity =>
            {
                entity.HasKey(e => e.IdTipo)
                    .HasName("pk_tipo");

                entity.Property(e => e.IdTipo).HasColumnName("id_tipo");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.IdUsuario)
                 .HasName("pk_usuario");

                entity.Property(e => e.IdUsuario)
                    .HasColumnName("id_usuario");
                entity.Property(e => e.NUsuario)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NUsuario");
                entity.Property(e => e.Constraseña)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("contraseña");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}